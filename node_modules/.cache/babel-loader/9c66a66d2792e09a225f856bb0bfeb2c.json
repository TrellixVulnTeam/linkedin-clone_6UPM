{"ast":null,"code":"import { auth, provider } from \"../Firebase\";\nimport { SET_USER } from \"./ActionType\";\nexport const setUser = payload => ({\n  type: SET_USER,\n  user: payload\n});\nexport function signInAPI() {\n  return dispatch => {\n    auth.signInWithPopup(provider).then(payload => {\n      dispatch(setUser(payload.user));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}\nexport function getUserAuth() {\n  return dispatch => {\n    auth.onAuthStateChanged(async user => {\n      if (user) {\n        dispatch(setUser(user));\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/Users/jibrilmohamed/Documents/reactJS/linkedin-clone/src/action/index.js"],"names":["auth","provider","SET_USER","setUser","payload","type","user","signInAPI","dispatch","signInWithPopup","then","catch","error","console","log","getUserAuth","onAuthStateChanged"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,aAA/B;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAO,MAAMC,OAAO,GAAIC,OAAD,KAAc;AACnCC,EAAAA,IAAI,EAAEH,QAD6B;AAEnCI,EAAAA,IAAI,EAAEF;AAF6B,CAAd,CAAhB;AAKP,OAAO,SAASG,SAAT,GAAqB;AAC1B,SAAQC,QAAD,IAAc;AACnBR,IAAAA,IAAI,CACDS,eADH,CACmBR,QADnB,EAEGS,IAFH,CAESN,OAAD,IAAa;AACjBI,MAAAA,QAAQ,CAACL,OAAO,CAACC,OAAO,CAACE,IAAT,CAAR,CAAR;AACD,KAJH,EAKGK,KALH,CAKUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPH;AAQD,GATD;AAUD;AAED,OAAO,SAASG,WAAT,GAAuB;AAC5B,SAAQP,QAAD,IAAc;AACnBR,IAAAA,IAAI,CAACgB,kBAAL,CAAwB,MAAOV,IAAP,IAAgB;AACtC,UAAIA,IAAJ,EAAU;AACRE,QAAAA,QAAQ,CAACL,OAAO,CAACG,IAAD,CAAR,CAAR;AACD;AACF,KAJD;AAKD,GAND;AAOD","sourcesContent":["import { auth, provider } from \"../Firebase\";\nimport { SET_USER } from \"./ActionType\";\n\nexport const setUser = (payload) => ({\n  type: SET_USER,\n  user: payload,\n});\n\nexport function signInAPI() {\n  return (dispatch) => {\n    auth\n      .signInWithPopup(provider)\n      .then((payload) => {\n        dispatch(setUser(payload.user));\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n}\n\nexport function getUserAuth() {\n  return (dispatch) => {\n    auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        dispatch(setUser(user));\n      }\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}